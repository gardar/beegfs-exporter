---
name: Build and Release Binaries

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  workflow_dispatch:

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4

      # Set up the Rust toolchain
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      # Cache cargo for faster builds
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Packaging
        run: |
          mkdir -p release
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
            ARCH="amd64"
          elif [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            ARCH="arm64"
          fi
          # Create a directory structure inside the tarball
          PACKAGE_DIR="beegfs_exporter-${{ github.ref_name }}.linux-${ARCH}"
          mkdir -p release/$PACKAGE_DIR
          cp target/${{ matrix.target }}/release/beegfs-exporter release/$PACKAGE_DIR/beegfs_exporter
          tar -czvf release/beegfs_exporter-${{ github.ref_name }}.linux-${ARCH}.tar.gz -C release $PACKAGE_DIR

      - name: Upload binaries as build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-binaries-${{ matrix.target }}
          path: release/*.tar.gz
