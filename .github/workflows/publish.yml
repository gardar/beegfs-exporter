---
name: "Build and Publish Binaries"

on:
  push:
    tags:
      - '*'

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    name: "Release new version"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Bump version"
        uses: tj-actions/cargo-bump@v3

      - name: "Write cargo.toml"
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -m "chore: update version"
          git push --force origin HEAD:${{ github.default_branch }}

  build:
    name: "Build binaries"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.79.0
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: "Build"
        uses: ClementTsang/cargo-action@v0.0.3
        with:
          toolchain: 1.79.0
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - name: "Package"
        id: packaging
        run: |
          mkdir -p release
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
            ARCH="amd64"
          elif [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            ARCH="arm64"
          fi
          # Create a directory structure inside the tarball
          PACKAGE="beegfs_exporter-${{ github.ref_name }}.linux-${ARCH}"
          echo "PACKAGE=${PACKAGE}" >> $GITHUB_OUTPUT
          mkdir -p release/$PACKAGE
          cp target/${{ matrix.target }}/release/beegfs-exporter release/$PACKAGE/beegfs_exporter
          tar -czvf release/${PACKAGE}.tar.gz -C release $PACKAGE

      - name: "Upload binaries as build artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.packaging.outputs.PACKAGE }}
          path: release/${{ steps.packaging.outputs.PACKAGE }}.tar.gz

  publish:
    name: "Publish binaries"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries
          merge-multiple: true

      - name: "Upload binaries to release"
        uses: svenstaro/upload-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: binaries/beegfs_exporter-${{ github.ref_name }}.*.tar.gz
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
